{"version":3,"sources":["components/App/App.module.css","components/Commons/components/Meta/Meta.module.css","components/Commons/components/Weathers/Weathers.module.css","components/Commons/components/Loading/Loading.module.css","components/Commons/components/Weathers/components/Weather/Weather.module.css","components/Current/Current.module.css","store/slices/WeatherSlice.ts","store/store.ts","components/Commons/components/VerticalDivider/VerticalDivider.tsx","apis/getCurrentLocation/getCurrentLocation.ts","utils/OpenWeatherMap/OpenWeatherMap.tsx","config/config.tsx","apis/getWeather/getWeather.ts","components/Commons/components/Text/Text.tsx","components/Commons/components/Meta/Meta.tsx","components/Commons/components/Loading/Loading.tsx","store/hooks.ts","components/Current/Current.tsx","apis/getForecast/getForecast.ts","constants/constants.ts","components/Commons/components/Weathers/Weathers.tsx","components/Commons/components/Weathers/components/Weather/Weather.tsx","components/Forecast/Forecast.tsx","components/OtherCities/OtherCities.tsx","components/App/App.tsx","index.tsx","components/OtherCities/OtherCities.module.css","components/Forecast/Forecast.module.css"],"names":["module","exports","WeatherSlice","createSlice","name","initialState","reducers","setCityWeather","state","action","cityWeather","payload","actions","selectSetCity","store","configureStore","reducer","weatherReducer","VerticalDivider","props","className","getCurrentLocation","a","Promise","res","rej","navigator","geolocation","getCurrentPosition","OpenWeatherMap","axios","create","baseURL","interceptors","request","use","config","params","appid","process","units","getWeatherByCoordinate","coord","get","lat","lon","getWeathersByMultipleCityId","ids","id","join","Text","children","Meta","title","value","styles","Loading","loadingStyle","cx","classNames","bind","useAppDispatch","useDispatch","useAppSelector","useSelector","Current","useState","loading","setLoading","setCoord","weather","setWeather","dispatch","useEffect","getLocation","getLocationWeather","then","position","coords","latitude","longitude","data","current","left","temperature","main","temp","clouds","bottomMetas","humidity","wind","speed","divider","right","location","bottom","getForecastById","MAIN_CITY","WEEK","Weathers","parentStyles","header","Weather","childrenStyles","CustomTag","onClick","src","icon","alt","everyday","day","Forecast","weatherList","setWeatherList","getForecast","response","list","getWeeklyWeather","filter","Date","dt_txt","getHours","forecast","weathers","map","getDay","Math","round","city","OtherCities","toggle","setToggle","currentCity","getCityWeather","otherCities","active","cities","index","buttonIndex","updatedList","item","handleCityClick","App","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6553e96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\",\"weather\":\"App_weather__18FYf\",\"bottom\":\"App_bottom__1phAf\",\"divider\":\"App_divider__3TIDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Meta_title__2_3z7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Weathers_block__1YnAG\",\"header\":\"Weathers_header__3OaWT\",\"title\":\"Weathers_title__1wtVT\",\"icon\":\"Weathers_icon__EYxuO\",\"temperature\":\"Weathers_temperature__1etY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__2nSrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Weather_title__MKNSx\",\"icon\":\"Weather_icon__3jpCK\",\"temperature\":\"Weather_temperature__9R3j6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"current\":\"Current_current__2bCtp\",\"left\":\"Current_left__3KflQ\",\"temperature\":\"Current_temperature__3INBI\",\"clouds\":\"Current_clouds__Ku4k4\",\"bottomMetas\":\"Current_bottomMetas__3toL-\",\"humidity\":\"Current_humidity__nzLzK\",\"wind\":\"Current_wind__354z-\",\"right\":\"Current_right__3aLAj\",\"location\":\"Current_location__1OEQx\",\"bottom\":\"Current_bottom__1ZcpP\",\"divider\":\"Current_divider__1C6Um\",\"loading\":\"Current_loading__1n9VF\"};","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { ICityWeatherState, IWeatherProps } from \"../../interfaces/weather\";\nimport type { RootState } from \"../store\";\n\nconst initialState: ICityWeatherState = {};\n\nexport const WeatherSlice = createSlice({\n\tname: 'weather',\n\tinitialState,\n\treducers: {\n\t\tsetCityWeather: (state: ICityWeatherState, action: PayloadAction<IWeatherProps>) => {\n\t\t\tstate.cityWeather = action.payload\n\t\t}\n\t}\n});\n\nexport const { setCityWeather } = WeatherSlice.actions;\n\nexport const selectSetCity = (state: RootState) => state.cityWeather;\n\nexport default WeatherSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\nimport weatherReducer from './slices/WeatherSlice';\n\nexport const store = configureStore({\n\treducer: {\n\t\tcityWeather: weatherReducer,\n\t}\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\n\ninterface IDividerProps {\n\tclassName: string;\n}\nconst VerticalDivider = (props: IDividerProps) => (<div className={props.className} />)\n\nexport default VerticalDivider;","export default async function getCurrentLocation (): Promise<GeolocationPosition> {\n\treturn new Promise((res, rej) => {\n\t\tnavigator.geolocation.getCurrentPosition(res, rej);\n\t});\n}\n","import axios, { AxiosRequestConfig } from \"axios\";\nimport { APP_ID } from \"../../config/config\";\n\nconst baseURL = 'https://api.openweathermap.org/data/2.5/';\n\nconst OpenWeatherMap = axios.create({\n\tbaseURL,\n});\n\nconst requestWithAppId = (config: AxiosRequestConfig) => {\n\tconfig.params.appid = APP_ID;\n\treturn config;\n}\n\nconst requestWithCelsiusUnits = (config: AxiosRequestConfig) => {\n\tconfig.params.units = 'metric';\n\treturn config;\n}\n\nOpenWeatherMap.interceptors.request.use(requestWithAppId);\nOpenWeatherMap.interceptors.request.use(requestWithCelsiusUnits);\n\nexport default OpenWeatherMap;","const APP_ID = process.env.REACT_APP_WEATHER_APP_ID;\n\nexport {\n\tAPP_ID\n}","import { AxiosResponse } from \"axios\";\nimport { ICoordinate } from \"../../interfaces/weather\";\nimport OpenWeatherMap from \"../../utils/OpenWeatherMap/OpenWeatherMap\"\n\nexport async function getWeatherByCoordinate (coord: ICoordinate): Promise<AxiosResponse> {\n\treturn OpenWeatherMap.get('/weather', {\n\t\tparams: {\n\t\t\tlat: coord.lat,\n\t\t\tlon: coord.lon,\n\t\t},\n\t});\n}\n\nexport async function getWeatherByCityId(id: number): Promise<AxiosResponse> {\n\treturn OpenWeatherMap.get('/weather', {\n\t\tparams: {\n\t\t\tid,\n\t\t}\n\t});\n}\n\nexport async function getWeathersByMultipleCityId(ids: Array<number>): Promise<AxiosResponse> {\n\treturn OpenWeatherMap.get('/group', {\n\t\tparams: {\n\t\t\tid: ids.join(','),\n\t\t}\n\t});\n}\n","import React from \"react\";\n\ninterface ITextProps {\n\tclassName: string;\n\tchildren: string;\n}\n\nconst Text: React.FC<ITextProps> = ({className, children}) => (\n\t\t<span className={className}>{children}</span>\n);\n\n\nexport default Text;","import React  from \"react\";\nimport Text from '../Text';\nimport styles from './Meta.module.css';\n\ninterface IMetaProps {\n\tclassName: string;\n\ttitle?: string;\n\tvalue: string;\n}\n\nconst Meta: React.FC<IMetaProps> = ({className, title, value }) => {\n\treturn (\n\t\t<div className={className}>\n\t\t\t{title && <Text className={styles.title}>{title}</Text>}\n\t\t\t{title && <br/>}\n\t\t\t<Text className={styles.value}>{value}</Text>\n\t\t</div>\n\t);\n }\n\nexport default Meta;","import React from \"react\";\nimport classNames from \"classnames/bind\";\nimport styles from './Loading.module.css';\n\ninterface ILoadingProps {\n\tloadingStyle?: string;\n}\n\nconst Loading = ({ loadingStyle }: ILoadingProps) => {\n\tconst cx = classNames.bind(styles);\n\n\treturn(\n\t\t<div className={cx('loading', loadingStyle)}>\n\t\t\t<div >loading...</div>\n\t\t</div>\n\t)\n}\n\nexport default Loading;\n","import type { AppDispatch, RootState } from \"./store\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React, { useEffect, useState } from \"react\";\nimport getCurrentLocation from \"../../apis/getCurrentLocation\";\nimport { getWeatherByCoordinate } from \"../../apis/getWeather\";\nimport { ICoordinate, IWeatherProps } from \"../../interfaces/weather\";\nimport VerticalDivider from \"../Commons/components/VerticalDivider\";\nimport Meta from \"../Commons/components/Meta\";\nimport styles from './Current.module.css';\nimport Loading from \"../Commons/components/Loading\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { selectSetCity, setCityWeather } from \"../../store/slices/WeatherSlice\";\n\n\n\nconst Current: React.FC = () => {\n\tconst [loading, setLoading] = useState<boolean>(true);\n\tconst [coord, setCoord] = useState<ICoordinate>();\n\tconst [weather, setWeather] = useState<IWeatherProps>();\n\n\tconst cityWeather = useAppSelector(selectSetCity).cityWeather;\n\tconst dispatch = useAppDispatch();\n\n\tuseEffect(() => {\n\t\tgetLocation();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\t\tgetLocationWeather();\n\t}, [coord]);\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\t\tif (cityWeather) {\n\t\t\tsetWeather(cityWeather);\n\t\t\tsetLoading(false);\n\t\t}\n\t },[cityWeather]);\n\n\tconst getLocation = async () => {\n\t\tawait getCurrentLocation().then((position) => {\n\t\t\tsetCoord({\n\t\t\t\tlat: position.coords.latitude,\n\t\t\t\tlon: position.coords.longitude,\n\t\t\t})\n\t\t});\n\t}\n\n\tconst getLocationWeather = async () => {\n\t\tif (coord && !cityWeather) {\n\t\t\tawait getWeatherByCoordinate(coord).then((res) => {\n\t\t\t\tconst { data } = res;\n\t\t\t\tsetWeather(data);\n\t\t\t\tsetLoading(false);\n\t\t\t\tdispatch(setCityWeather(data));\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={styles.current}>\n\t\t\t{loading ? (\n\t\t\t\t<Loading loadingStyle={styles.loading}/>\n\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className={styles.left}>\n\t\t\t\t\t\t\t<Meta className={styles.temperature} value={`${weather?.main.temp} °`} />\n\t\t\t\t\t\t\t<Meta className={styles.clouds} value={`${weather?.weather[0].main}`} />\n\t\t\t\t\t\t\t<div className={styles.bottomMetas}>\n\t\t\t\t\t\t\t\t<Meta className={styles.humidity} title='HUMIDITY' value={`${weather?.wind?.speed} %`} />\n\t\t\t\t\t\t\t\t<VerticalDivider className={styles.divider} />\n\t\t\t\t\t\t\t\t<Meta className={styles.wind} title='WIND' value={`${weather?.wind?.speed} K/M`} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={styles.right}>\n\t\t\t\t\t\t\t<Meta className={styles.location}  value={`${weather?.name}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={styles.bottom} />\n\t\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Current;\n","import { AxiosResponse } from \"axios\";\nimport OpenWeatherMap from \"../../utils/OpenWeatherMap/OpenWeatherMap\"\n\nexport default async function getForecastById(id: number): Promise<AxiosResponse>{\n\treturn OpenWeatherMap.get('/forecast', {\n\t\tparams: {\n\t\t\tid,\n\t\t}\n\t});\n}","export const MAIN_CITY = [\n\t{\n\t\tid: 2158177,\n\t\tname: 'Melbourne',\n\t},\n\t{\n\t\tid: 2147714,\n\t\tname: 'Sydney',\n\t},\n\t{\n\t\tid: 2174003,\n\t\tname: 'Brisbane',\n\t},\n\t{\n\t\tid: 2063523,\n\t\tname: 'Perth',\n\t},\n];\n\nexport const WEEK = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];","import React, { ReactNode } from \"react\";\nimport classNames from 'classnames/bind'\nimport styles from './Weathers.module.css';\nimport Loading from \"../Loading\";\n\ninterface IWeathersDisplayProps {\n\tparentStyles: string;\n\theader: 'Forecast' | 'Other Cities';\n\tloading: boolean;\n\tchildren: ReactNode;\n}\n\nconst Weathers: React.FC<IWeathersDisplayProps> = (props) => {\n\tconst { parentStyles, header, loading, children } = props;\n\n\tconst cx = classNames.bind(styles);\n\n\treturn (\n\t\t<div className={cx('block')}>\n\t\t\t<h2 className={styles.header}>{header}</h2>\n\t\t\t{loading ? (\n\t\t\t\t<Loading />\n\t\t\t) : (\n\t\t\t\t\t<div className={parentStyles}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Weathers;","import React from \"react\";\nimport classNames from 'classnames/bind';\nimport styles from './Weather.module.css';\nimport { ICloudsProps } from \"../../../../../../interfaces/weather\";\n\ninterface IWeatherComponentProps {\n\tchildrenStyles: string[];\n\tCustomTag: 'button' | 'div';\n\tonClick?: () => void;\n\ttitle: string;\n\tclouds: ICloudsProps;\n\ttemperature: string;\n}\n\nconst Weather: React.FC<IWeatherComponentProps> = (props) => {\n\tconst { childrenStyles, CustomTag, title, clouds, temperature, onClick } = props;\n\tconst cx = classNames.bind(styles);\n\n\treturn (\n\t\t<>\n\t\t\t<CustomTag className={childrenStyles[0]} onClick={() => onClick ? onClick() : null}>\n\t\t\t\t<h3 className={cx('title', childrenStyles[1])}>{title}</h3>\n\t\t\t\t<img\n\t\t\t\t\tclassName={cx('icon', childrenStyles[2])}\n\t\t\t\t\tsrc={`https://openweathermap.org/img/wn/${clouds.icon}@2x.png`}\n\t\t\t\t\talt={clouds.main}\n\t\t\t\t/>\n\t\t\t\t<div className={cx('temperature', childrenStyles[3])}>{temperature}</div>\n\t\t\t</CustomTag>\n\t\t</>\n\t);\n }\n\nexport default Weather;","import React, { useEffect, useState } from \"react\";\nimport getForecastById from \"../../apis/getForecast\";\nimport {WEEK} from \"../../constants/constants\";\nimport { IWeatherProps } from \"../../interfaces/weather\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport Weathers from \"../Commons/components/Weathers\";\nimport Weather from \"../Commons/components/Weathers/components/Weather\";\nimport { selectSetCity } from \"../../store/slices/WeatherSlice\";\nimport styles from './Forecast.module.css';\n\nconst childrenStyles: string[] = [styles.everyday, styles.day, styles.icon, styles.temperature];\n\nconst Forecast: React.FC = () => {\n\tconst [weatherList, setWeatherList] = useState<Array<IWeatherProps>>();\n\tconst [loading, setLoading] = useState<boolean>(true);\n\n\tconst id = useAppSelector(selectSetCity).cityWeather?.id;\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\t\tgetForecast();\n\t}, [id]);\n\n\tconst getForecast = async () => {\n\t\tif (id) {\n\t\t\tawait getForecastById(id).then((response) => {\n\t\t\t\tconst { list } = response.data;\n\t\t\t\tsetWeatherList(getWeeklyWeather(list));\n\t\t\t\tsetLoading(false);\n\t\t\t})\n\t\t}\n\t}\n\n\tconst getWeeklyWeather = (list: Array<IWeatherProps>) => (\n\t\tlist.filter(weather => new Date(weather.dt_txt).getHours() === 12)\n\t)\n\n\treturn (\n\t\t<div className={styles.forecast}>\n\t\t\t<Weathers\n\t\t\t\tparentStyles={styles.weathers}\n\t\t\t\theader={\"Forecast\"}\n\t\t\t\tloading={loading}\n\t\t\t>\n\t\t\t\t{weatherList?.map((weather) => (\n\t\t\t\t\t<Weather\n\t\t\t\t\t\tkey={weather.dt_txt}\n\t\t\t\t\t\tchildrenStyles={childrenStyles}\n\t\t\t\t\t\tCustomTag={'div'}\n\t\t\t\t\t\ttitle={WEEK[new Date(weather.dt_txt).getDay()]}\n\t\t\t\t\t\tclouds={weather.weather[0]}\n\t\t\t\t\t\ttemperature={`${Math.round(weather.main.temp)} °`}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Weathers>\n\t\t</div>\n\t)\n}\n\nexport default Forecast;","import React, { useEffect, useState } from 'react';\nimport { getWeathersByMultipleCityId } from '../../apis/getWeather';\nimport { MAIN_CITY } from '../../constants/constants';\nimport { IWeatherProps } from '../../interfaces/weather';\nimport Weathers from '../Commons/components/Weathers';\nimport classNames from 'classnames/bind'\nimport styles from './OtherCities.module.css';\nimport Weather from '../Commons/components/Weathers/components/Weather';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { selectSetCity, setCityWeather } from '../../store/slices/WeatherSlice';\n\nconst childrenStyles: string[] = [styles.city, styles.name, styles.icon, styles.temperature];\n\nconst OtherCities:React.FC= () => {\n\tconst [weatherList, setWeatherList] = useState<Array<IWeatherProps>>();\n\tconst [loading, setLoading] = useState<boolean>(true);\n\tconst [toggle, setToggle] = useState<boolean>(false);\n\n\tconst currentCity = useAppSelector(selectSetCity).cityWeather;\n\tconst dispatch = useAppDispatch();\n\tconst cx = classNames.bind(styles);\n\n\tuseEffect(() => {\n\t\tgetCityWeather();\n\t}, []);\n\n\tconst getCityWeather = async () => {\n\t\tconst ids = MAIN_CITY.map(city => city.id);\n\t\tawait getWeathersByMultipleCityId(ids).then((response) => {\n\t\t\tconst { data } = response;\n\t\t\tsetWeatherList(data.list);\n\t\t\tsetLoading(false);\n\t\t});\n\t}\n\n\tconst handleToggle = () => setToggle(!toggle);\n\n\t\tconst handleCityClick = (weather: IWeatherProps, buttonIndex: number) => {\n\t\t\tif (weatherList) {\n\t\t\t\tconst updatedList = weatherList.map((item, index) => {\n\t\t\t\t\tif (currentCity && index === buttonIndex) {\n\t\t\t\t\t\treturn currentCity;\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t})\n\t\t\t\tsetWeatherList(updatedList);\n\t\t\t}\n\t\t\tcurrentCity && dispatch(setCityWeather(weather));\n\t};\n\n\treturn (\n\t\t<div className={styles.otherCities}>\n\t\t\t{!toggle && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={styles.toggle}\n\t\t\t\t\t\tonClick={handleToggle}\n\t\t\t\t\t>\n\t\t\t\t\t\tView More Cities ...\n\t\t\t\t\t</button>\n\t\t\t\t)\n\t\t\t}\n\t\t\t<div className={cx('container', { active: toggle })}>\n\t\t\t\t<Weathers\n\t\t\t\t\tparentStyles={styles.cities}\n\t\t\t\t\theader={\"Other Cities\"}\n\t\t\t\t\tloading={loading}\n\t\t\t\t>\n\t\t\t\t\t{weatherList?.map((weather, index) => (\n\t\t\t\t\t\t<Weather\n\t\t\t\t\t\t\tkey={weather.id}\n\t\t\t\t\t\t\tchildrenStyles={childrenStyles}\n\t\t\t\t\t\t\tCustomTag={'button'}\n\t\t\t\t\t\t\tonClick={() => handleCityClick(weather, index)}\n\t\t\t\t\t\t\ttitle={weather.name}\n\t\t\t\t\t\t\tclouds={weather.weather[0]}\n\t\t\t\t\t\t\ttemperature={`${Math.round(weather.main.temp)} °`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Weathers>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default OtherCities;\n","import React from 'react';\nimport VerticalDivider from '../Commons/components/VerticalDivider';\nimport Current from '../Current';\nimport Forecast from '../Forecast';\nimport OtherCities from '../OtherCities';\nimport styles from './App.module.css';\n\nconst App = () => {\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<div className={styles.weather}>\n\t\t\t\t<Current />\n\t\t\t\t<div className={styles.bottom}>\n\t\t\t\t\t<OtherCities />\n\t\t\t\t\t<VerticalDivider className={styles.divider}/>\n\t\t\t\t\t<Forecast />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport {store} from './store';\nimport App from './components/App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store ={store}>\n\t\t\t<App />\n\t\t</Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"otherCities\":\"OtherCities_otherCities__jnC3A\",\"toggle\":\"OtherCities_toggle__A0OLI\",\"container\":\"OtherCities_container__1xHw4\",\"active\":\"OtherCities_active__15sNT\",\"city\":\"OtherCities_city__2YFSc\",\"name\":\"OtherCities_name__2GjLL\",\"icon\":\"OtherCities_icon__3qrq-\",\"temperature\":\"OtherCities_temperature__1GKFk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecast\":\"Forecast_forecast__3_gmE\",\"weathers\":\"Forecast_weathers__15OQW\",\"everyday\":\"Forecast_everyday__3FOrc\",\"day\":\"Forecast_day__26eWd\",\"icon\":\"Forecast_icon__JgmAR\",\"temperature\":\"Forecast_temperature__3KlxT\"};"],"sourceRoot":""}